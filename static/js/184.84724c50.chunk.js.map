{"version":3,"file":"static/js/184.84724c50.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["import { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nclass DragControls {\n    constructor() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    subscribe(controls) {\n        this.componentControls.add(controls);\n        return () => this.componentControls.delete(controls);\n    }\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    start(event, options) {\n        this.componentControls.forEach((controls) => {\n            controls.start(event.nativeEvent || event, options);\n        });\n    }\n}\nconst createDragControls = () => new DragControls();\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nexport { DragControls, useDragControls };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.10.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","import { isWillChangeMotionValue } from './is.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange) &&\n        getWillChangeName(key)) {\n        visualElement.setStaticValue(\"willChange\", \"transform\");\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    let applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    const willChangeName = getWillChangeName(key);\n                    if (willChangeName) {\n                        values.willChange = \"transform\";\n                        return;\n                    }\n                }\n            });\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.10.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.10.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"names":["DragControls","constructor","this","componentControls","Set","subscribe","controls","add","delete","start","event","options","forEach","nativeEvent","createDragControls","useDragControls","useConstant","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","cancel","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","isBezierDefinition","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","generateLinearEasing","points","numPoints","segmentEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","getWillChangeName","addValueToWillChange","applyWillChange","willChange","style","setStaticValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","scheduleHandoffComplete","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","updateFeatures","completeHandoff","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement"],"sourceRoot":""}